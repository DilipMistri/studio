{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["'use server';\n\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nimport { GeneratedRecipe } from '@/lib/types';\n\nexport async function generateRecipe(\n  ingredients: string,\n  servings: number,\n): Promise<GeneratedRecipe | null> {\n  const apiKey = process.env.GEMINI_API_KEY;\n  if (!apiKey) {\n    throw new Error('Missing Gemini API key');\n  }\n\n  const genAI = new GoogleGenerativeAI(apiKey);\n  const model = genAI.getGenerativeModel({\n    model: 'gemini-1.5-flash',\n  });\n\n  const prompt = `You are a recipe generating expert. Given a list of ingredients, create a recipe in Gujarati.\nThe recipe should be for ${servings} servings.\nIngredients: ${ingredients}\nReturn the response as a JSON object with the following structure: { \"title\": \"...\", \"ingredients\": [{ \"name\": \"...\", \"quantity\": \"...\" }, ...], \"steps\": [\"...\", \"...\"] }\nThe ingredient quantities should be in grams or kilograms as appropriate for the serving size. The title, ingredient names, and steps must be in Gujarati.`;\n\n  try {\n    const result = await model.generateContent(prompt);\n    const response = await result.response;\n    const text = response.text();\n    \n    // Clean the text to ensure it's valid JSON\n    const jsonString = text.replace(/```json/g, '').replace(/```/g, '').trim();\n\n    const recipe: GeneratedRecipe = JSON.parse(jsonString);\n    return recipe;\n  } catch (error) {\n    console.error('Error generating recipe:', error);\n    return null;\n  }\n}\n"],"names":[],"mappings":";;;;;AAEA;;;;;AAGO,eAAe,eACpB,WAAmB,EACnB,QAAgB;IAEhB,MAAM,SAAS,QAAQ,GAAG,CAAC,cAAc;IACzC,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,QAAQ,IAAI,8JAAA,CAAA,qBAAkB,CAAC;IACrC,MAAM,QAAQ,MAAM,kBAAkB,CAAC;QACrC,OAAO;IACT;IAEA,MAAM,SAAS,CAAC;yBACO,EAAE,SAAS;aACvB,EAAE,YAAY;;0JAE+H,CAAC;IAEzJ,IAAI;QACF,MAAM,SAAS,MAAM,MAAM,eAAe,CAAC;QAC3C,MAAM,WAAW,MAAM,OAAO,QAAQ;QACtC,MAAM,OAAO,SAAS,IAAI;QAE1B,2CAA2C;QAC3C,MAAM,aAAa,KAAK,OAAO,CAAC,YAAY,IAAI,OAAO,CAAC,QAAQ,IAAI,IAAI;QAExE,MAAM,SAA0B,KAAK,KAAK,CAAC;QAC3C,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO;IACT;AACF;;;IAlCsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateRecipe as '60525b13735b526843ac19d8d14e2ccd1717eac987'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}